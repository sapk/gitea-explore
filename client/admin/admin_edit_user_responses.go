// Code generated by go-swagger; DO NOT EDIT.

package admin

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "gitea.com/sapk/explore/models"
)

// AdminEditUserReader is a Reader for the AdminEditUser structure.
type AdminEditUserReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AdminEditUserReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAdminEditUserOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewAdminEditUserForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewAdminEditUserUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewAdminEditUserOK creates a AdminEditUserOK with default headers values
func NewAdminEditUserOK() *AdminEditUserOK {
	return &AdminEditUserOK{}
}

/*AdminEditUserOK handles this case with default header values.

User
*/
type AdminEditUserOK struct {
	Payload *models.User
}

func (o *AdminEditUserOK) Error() string {
	return fmt.Sprintf("[PATCH /admin/users/{username}][%d] adminEditUserOK  %+v", 200, o.Payload)
}

func (o *AdminEditUserOK) GetPayload() *models.User {
	return o.Payload
}

func (o *AdminEditUserOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.User)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAdminEditUserForbidden creates a AdminEditUserForbidden with default headers values
func NewAdminEditUserForbidden() *AdminEditUserForbidden {
	return &AdminEditUserForbidden{}
}

/*AdminEditUserForbidden handles this case with default header values.

APIForbiddenError is a forbidden error response
*/
type AdminEditUserForbidden struct {
	Message string

	URL string
}

func (o *AdminEditUserForbidden) Error() string {
	return fmt.Sprintf("[PATCH /admin/users/{username}][%d] adminEditUserForbidden ", 403)
}

func (o *AdminEditUserForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header message
	o.Message = response.GetHeader("message")

	// response header url
	o.URL = response.GetHeader("url")

	return nil
}

// NewAdminEditUserUnprocessableEntity creates a AdminEditUserUnprocessableEntity with default headers values
func NewAdminEditUserUnprocessableEntity() *AdminEditUserUnprocessableEntity {
	return &AdminEditUserUnprocessableEntity{}
}

/*AdminEditUserUnprocessableEntity handles this case with default header values.

APIValidationError is error format response related to input validation
*/
type AdminEditUserUnprocessableEntity struct {
	Message string

	URL string
}

func (o *AdminEditUserUnprocessableEntity) Error() string {
	return fmt.Sprintf("[PATCH /admin/users/{username}][%d] adminEditUserUnprocessableEntity ", 422)
}

func (o *AdminEditUserUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header message
	o.Message = response.GetHeader("message")

	// response header url
	o.URL = response.GetHeader("url")

	return nil
}
