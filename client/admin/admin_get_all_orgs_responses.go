// Code generated by go-swagger; DO NOT EDIT.

package admin

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "gitea.com/sapk/explore/models"
)

// AdminGetAllOrgsReader is a Reader for the AdminGetAllOrgs structure.
type AdminGetAllOrgsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AdminGetAllOrgsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAdminGetAllOrgsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewAdminGetAllOrgsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewAdminGetAllOrgsOK creates a AdminGetAllOrgsOK with default headers values
func NewAdminGetAllOrgsOK() *AdminGetAllOrgsOK {
	return &AdminGetAllOrgsOK{}
}

/*AdminGetAllOrgsOK handles this case with default header values.

OrganizationList
*/
type AdminGetAllOrgsOK struct {
	Payload []*models.Organization
}

func (o *AdminGetAllOrgsOK) Error() string {
	return fmt.Sprintf("[GET /admin/orgs][%d] adminGetAllOrgsOK  %+v", 200, o.Payload)
}

func (o *AdminGetAllOrgsOK) GetPayload() []*models.Organization {
	return o.Payload
}

func (o *AdminGetAllOrgsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAdminGetAllOrgsForbidden creates a AdminGetAllOrgsForbidden with default headers values
func NewAdminGetAllOrgsForbidden() *AdminGetAllOrgsForbidden {
	return &AdminGetAllOrgsForbidden{}
}

/*AdminGetAllOrgsForbidden handles this case with default header values.

APIForbiddenError is a forbidden error response
*/
type AdminGetAllOrgsForbidden struct {
	Message string

	URL string
}

func (o *AdminGetAllOrgsForbidden) Error() string {
	return fmt.Sprintf("[GET /admin/orgs][%d] adminGetAllOrgsForbidden ", 403)
}

func (o *AdminGetAllOrgsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header message
	o.Message = response.GetHeader("message")

	// response header url
	o.URL = response.GetHeader("url")

	return nil
}
