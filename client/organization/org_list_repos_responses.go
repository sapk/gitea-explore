// Code generated by go-swagger; DO NOT EDIT.

package organization

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "gitea.com/sapk/explore/models"
)

// OrgListReposReader is a Reader for the OrgListRepos structure.
type OrgListReposReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *OrgListReposReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewOrgListReposOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewOrgListReposOK creates a OrgListReposOK with default headers values
func NewOrgListReposOK() *OrgListReposOK {
	return &OrgListReposOK{}
}

/*OrgListReposOK handles this case with default header values.

RepositoryList
*/
type OrgListReposOK struct {
	Payload []*models.Repository
}

func (o *OrgListReposOK) Error() string {
	return fmt.Sprintf("[GET /orgs/{org}/repos][%d] orgListReposOK  %+v", 200, o.Payload)
}

func (o *OrgListReposOK) GetPayload() []*models.Repository {
	return o.Payload
}

func (o *OrgListReposOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
