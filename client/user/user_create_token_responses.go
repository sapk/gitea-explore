// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	strfmt "github.com/go-openapi/strfmt"
)

// UserCreateTokenReader is a Reader for the UserCreateToken structure.
type UserCreateTokenReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UserCreateTokenReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUserCreateTokenOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUserCreateTokenOK creates a UserCreateTokenOK with default headers values
func NewUserCreateTokenOK() *UserCreateTokenOK {
	return &UserCreateTokenOK{}
}

/*UserCreateTokenOK handles this case with default header values.

AccessToken represents an API access token.
*/
type UserCreateTokenOK struct {
	ID int64

	Name string

	Sha1 string

	TokenLastEight string
}

func (o *UserCreateTokenOK) Error() string {
	return fmt.Sprintf("[POST /users/{username}/tokens][%d] userCreateTokenOK ", 200)
}

func (o *UserCreateTokenOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header id
	id, err := swag.ConvertInt64(response.GetHeader("id"))
	if err != nil {
		return errors.InvalidType("id", "header", "int64", response.GetHeader("id"))
	}
	o.ID = id

	// response header name
	o.Name = response.GetHeader("name")

	// response header sha1
	o.Sha1 = response.GetHeader("sha1")

	// response header token_last_eight
	o.TokenLastEight = response.GetHeader("token_last_eight")

	return nil
}

/*UserCreateTokenBody user create token body
swagger:model UserCreateTokenBody
*/
type UserCreateTokenBody struct {

	// name
	// Required: true
	Name *string `json:"name"`
}

// Validate validates this user create token body
func (o *UserCreateTokenBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateName(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *UserCreateTokenBody) validateName(formats strfmt.Registry) error {

	if err := validate.Required("accessToken"+"."+"name", "body", o.Name); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *UserCreateTokenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *UserCreateTokenBody) UnmarshalBinary(b []byte) error {
	var res UserCreateTokenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
