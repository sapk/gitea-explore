// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// UserCurrentCheckFollowingReader is a Reader for the UserCurrentCheckFollowing structure.
type UserCurrentCheckFollowingReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UserCurrentCheckFollowingReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewUserCurrentCheckFollowingNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewUserCurrentCheckFollowingNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUserCurrentCheckFollowingNoContent creates a UserCurrentCheckFollowingNoContent with default headers values
func NewUserCurrentCheckFollowingNoContent() *UserCurrentCheckFollowingNoContent {
	return &UserCurrentCheckFollowingNoContent{}
}

/*UserCurrentCheckFollowingNoContent handles this case with default header values.

APIEmpty is an empty response
*/
type UserCurrentCheckFollowingNoContent struct {
}

func (o *UserCurrentCheckFollowingNoContent) Error() string {
	return fmt.Sprintf("[GET /user/following/{username}][%d] userCurrentCheckFollowingNoContent ", 204)
}

func (o *UserCurrentCheckFollowingNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUserCurrentCheckFollowingNotFound creates a UserCurrentCheckFollowingNotFound with default headers values
func NewUserCurrentCheckFollowingNotFound() *UserCurrentCheckFollowingNotFound {
	return &UserCurrentCheckFollowingNotFound{}
}

/*UserCurrentCheckFollowingNotFound handles this case with default header values.

APINotFound is a not found empty response
*/
type UserCurrentCheckFollowingNotFound struct {
}

func (o *UserCurrentCheckFollowingNotFound) Error() string {
	return fmt.Sprintf("[GET /user/following/{username}][%d] userCurrentCheckFollowingNotFound ", 404)
}

func (o *UserCurrentCheckFollowingNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
