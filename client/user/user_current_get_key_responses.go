// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "gitea.com/sapk/explore/models"
)

// UserCurrentGetKeyReader is a Reader for the UserCurrentGetKey structure.
type UserCurrentGetKeyReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UserCurrentGetKeyReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUserCurrentGetKeyOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewUserCurrentGetKeyNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUserCurrentGetKeyOK creates a UserCurrentGetKeyOK with default headers values
func NewUserCurrentGetKeyOK() *UserCurrentGetKeyOK {
	return &UserCurrentGetKeyOK{}
}

/*UserCurrentGetKeyOK handles this case with default header values.

PublicKey
*/
type UserCurrentGetKeyOK struct {
	Payload *models.PublicKey
}

func (o *UserCurrentGetKeyOK) Error() string {
	return fmt.Sprintf("[GET /user/keys/{id}][%d] userCurrentGetKeyOK  %+v", 200, o.Payload)
}

func (o *UserCurrentGetKeyOK) GetPayload() *models.PublicKey {
	return o.Payload
}

func (o *UserCurrentGetKeyOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PublicKey)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUserCurrentGetKeyNotFound creates a UserCurrentGetKeyNotFound with default headers values
func NewUserCurrentGetKeyNotFound() *UserCurrentGetKeyNotFound {
	return &UserCurrentGetKeyNotFound{}
}

/*UserCurrentGetKeyNotFound handles this case with default header values.

APINotFound is a not found empty response
*/
type UserCurrentGetKeyNotFound struct {
}

func (o *UserCurrentGetKeyNotFound) Error() string {
	return fmt.Sprintf("[GET /user/keys/{id}][%d] userCurrentGetKeyNotFound ", 404)
}

func (o *UserCurrentGetKeyNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
