// Code generated by go-swagger; DO NOT EDIT.

package miscellaneous

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// RenderMarkdownRawReader is a Reader for the RenderMarkdownRaw structure.
type RenderMarkdownRawReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RenderMarkdownRawReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewRenderMarkdownRawOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 422:
		result := NewRenderMarkdownRawUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewRenderMarkdownRawOK creates a RenderMarkdownRawOK with default headers values
func NewRenderMarkdownRawOK() *RenderMarkdownRawOK {
	return &RenderMarkdownRawOK{}
}

/*RenderMarkdownRawOK handles this case with default header values.

MarkdownRender is a rendered markdown document
*/
type RenderMarkdownRawOK struct {
	Payload string
}

func (o *RenderMarkdownRawOK) Error() string {
	return fmt.Sprintf("[POST /markdown/raw][%d] renderMarkdownRawOK  %+v", 200, o.Payload)
}

func (o *RenderMarkdownRawOK) GetPayload() string {
	return o.Payload
}

func (o *RenderMarkdownRawOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRenderMarkdownRawUnprocessableEntity creates a RenderMarkdownRawUnprocessableEntity with default headers values
func NewRenderMarkdownRawUnprocessableEntity() *RenderMarkdownRawUnprocessableEntity {
	return &RenderMarkdownRawUnprocessableEntity{}
}

/*RenderMarkdownRawUnprocessableEntity handles this case with default header values.

APIValidationError is error format response related to input validation
*/
type RenderMarkdownRawUnprocessableEntity struct {
	Message string

	URL string
}

func (o *RenderMarkdownRawUnprocessableEntity) Error() string {
	return fmt.Sprintf("[POST /markdown/raw][%d] renderMarkdownRawUnprocessableEntity ", 422)
}

func (o *RenderMarkdownRawUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header message
	o.Message = response.GetHeader("message")

	// response header url
	o.URL = response.GetHeader("url")

	return nil
}
