// Code generated by go-swagger; DO NOT EDIT.

package repository

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "gitea.com/sapk/explore/models"
)

// CreateCurrentUserRepoReader is a Reader for the CreateCurrentUserRepo structure.
type CreateCurrentUserRepoReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateCurrentUserRepoReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateCurrentUserRepoCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 409:
		result := NewCreateCurrentUserRepoConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewCreateCurrentUserRepoUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewCreateCurrentUserRepoCreated creates a CreateCurrentUserRepoCreated with default headers values
func NewCreateCurrentUserRepoCreated() *CreateCurrentUserRepoCreated {
	return &CreateCurrentUserRepoCreated{}
}

/*CreateCurrentUserRepoCreated handles this case with default header values.

Repository
*/
type CreateCurrentUserRepoCreated struct {
	Payload *models.Repository
}

func (o *CreateCurrentUserRepoCreated) Error() string {
	return fmt.Sprintf("[POST /user/repos][%d] createCurrentUserRepoCreated  %+v", 201, o.Payload)
}

func (o *CreateCurrentUserRepoCreated) GetPayload() *models.Repository {
	return o.Payload
}

func (o *CreateCurrentUserRepoCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Repository)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateCurrentUserRepoConflict creates a CreateCurrentUserRepoConflict with default headers values
func NewCreateCurrentUserRepoConflict() *CreateCurrentUserRepoConflict {
	return &CreateCurrentUserRepoConflict{}
}

/*CreateCurrentUserRepoConflict handles this case with default header values.

The repository with the same name already exists.
*/
type CreateCurrentUserRepoConflict struct {
}

func (o *CreateCurrentUserRepoConflict) Error() string {
	return fmt.Sprintf("[POST /user/repos][%d] createCurrentUserRepoConflict ", 409)
}

func (o *CreateCurrentUserRepoConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateCurrentUserRepoUnprocessableEntity creates a CreateCurrentUserRepoUnprocessableEntity with default headers values
func NewCreateCurrentUserRepoUnprocessableEntity() *CreateCurrentUserRepoUnprocessableEntity {
	return &CreateCurrentUserRepoUnprocessableEntity{}
}

/*CreateCurrentUserRepoUnprocessableEntity handles this case with default header values.

APIValidationError is error format response related to input validation
*/
type CreateCurrentUserRepoUnprocessableEntity struct {
	Message string

	URL string
}

func (o *CreateCurrentUserRepoUnprocessableEntity) Error() string {
	return fmt.Sprintf("[POST /user/repos][%d] createCurrentUserRepoUnprocessableEntity ", 422)
}

func (o *CreateCurrentUserRepoUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header message
	o.Message = response.GetHeader("message")

	// response header url
	o.URL = response.GetHeader("url")

	return nil
}
