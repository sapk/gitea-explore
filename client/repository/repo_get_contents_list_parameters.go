// Code generated by go-swagger; DO NOT EDIT.

package repository

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewRepoGetContentsListParams creates a new RepoGetContentsListParams object
// with the default values initialized.
func NewRepoGetContentsListParams() *RepoGetContentsListParams {
	var ()
	return &RepoGetContentsListParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewRepoGetContentsListParamsWithTimeout creates a new RepoGetContentsListParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewRepoGetContentsListParamsWithTimeout(timeout time.Duration) *RepoGetContentsListParams {
	var ()
	return &RepoGetContentsListParams{

		timeout: timeout,
	}
}

// NewRepoGetContentsListParamsWithContext creates a new RepoGetContentsListParams object
// with the default values initialized, and the ability to set a context for a request
func NewRepoGetContentsListParamsWithContext(ctx context.Context) *RepoGetContentsListParams {
	var ()
	return &RepoGetContentsListParams{

		Context: ctx,
	}
}

// NewRepoGetContentsListParamsWithHTTPClient creates a new RepoGetContentsListParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewRepoGetContentsListParamsWithHTTPClient(client *http.Client) *RepoGetContentsListParams {
	var ()
	return &RepoGetContentsListParams{
		HTTPClient: client,
	}
}

/*RepoGetContentsListParams contains all the parameters to send to the API endpoint
for the repo get contents list operation typically these are written to a http.Request
*/
type RepoGetContentsListParams struct {

	/*Owner
	  owner of the repo

	*/
	Owner string
	/*Ref
	  The name of the commit/branch/tag. Default the repositoryâ€™s default branch (usually master)

	*/
	Ref *string
	/*Repo
	  name of the repo

	*/
	Repo string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the repo get contents list params
func (o *RepoGetContentsListParams) WithTimeout(timeout time.Duration) *RepoGetContentsListParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the repo get contents list params
func (o *RepoGetContentsListParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the repo get contents list params
func (o *RepoGetContentsListParams) WithContext(ctx context.Context) *RepoGetContentsListParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the repo get contents list params
func (o *RepoGetContentsListParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the repo get contents list params
func (o *RepoGetContentsListParams) WithHTTPClient(client *http.Client) *RepoGetContentsListParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the repo get contents list params
func (o *RepoGetContentsListParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithOwner adds the owner to the repo get contents list params
func (o *RepoGetContentsListParams) WithOwner(owner string) *RepoGetContentsListParams {
	o.SetOwner(owner)
	return o
}

// SetOwner adds the owner to the repo get contents list params
func (o *RepoGetContentsListParams) SetOwner(owner string) {
	o.Owner = owner
}

// WithRef adds the ref to the repo get contents list params
func (o *RepoGetContentsListParams) WithRef(ref *string) *RepoGetContentsListParams {
	o.SetRef(ref)
	return o
}

// SetRef adds the ref to the repo get contents list params
func (o *RepoGetContentsListParams) SetRef(ref *string) {
	o.Ref = ref
}

// WithRepo adds the repo to the repo get contents list params
func (o *RepoGetContentsListParams) WithRepo(repo string) *RepoGetContentsListParams {
	o.SetRepo(repo)
	return o
}

// SetRepo adds the repo to the repo get contents list params
func (o *RepoGetContentsListParams) SetRepo(repo string) {
	o.Repo = repo
}

// WriteToRequest writes these params to a swagger request
func (o *RepoGetContentsListParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param owner
	if err := r.SetPathParam("owner", o.Owner); err != nil {
		return err
	}

	if o.Ref != nil {

		// query param ref
		var qrRef string
		if o.Ref != nil {
			qrRef = *o.Ref
		}
		qRef := qrRef
		if qRef != "" {
			if err := r.SetQueryParam("ref", qRef); err != nil {
				return err
			}
		}

	}

	// path param repo
	if err := r.SetPathParam("repo", o.Repo); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
