// Code generated by go-swagger; DO NOT EDIT.

package repository

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// RepoMergePullRequestReader is a Reader for the RepoMergePullRequest structure.
type RepoMergePullRequestReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RepoMergePullRequestReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewRepoMergePullRequestOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 405:
		result := NewRepoMergePullRequestMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewRepoMergePullRequestOK creates a RepoMergePullRequestOK with default headers values
func NewRepoMergePullRequestOK() *RepoMergePullRequestOK {
	return &RepoMergePullRequestOK{}
}

/*RepoMergePullRequestOK handles this case with default header values.

APIEmpty is an empty response
*/
type RepoMergePullRequestOK struct {
}

func (o *RepoMergePullRequestOK) Error() string {
	return fmt.Sprintf("[POST /repos/{owner}/{repo}/pulls/{index}/merge][%d] repoMergePullRequestOK ", 200)
}

func (o *RepoMergePullRequestOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRepoMergePullRequestMethodNotAllowed creates a RepoMergePullRequestMethodNotAllowed with default headers values
func NewRepoMergePullRequestMethodNotAllowed() *RepoMergePullRequestMethodNotAllowed {
	return &RepoMergePullRequestMethodNotAllowed{}
}

/*RepoMergePullRequestMethodNotAllowed handles this case with default header values.

APIEmpty is an empty response
*/
type RepoMergePullRequestMethodNotAllowed struct {
}

func (o *RepoMergePullRequestMethodNotAllowed) Error() string {
	return fmt.Sprintf("[POST /repos/{owner}/{repo}/pulls/{index}/merge][%d] repoMergePullRequestMethodNotAllowed ", 405)
}

func (o *RepoMergePullRequestMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
